{"version":3,"file":"static/js/429.0f027706.chunk.js","mappings":"6UAGaA,EAAeC,EAAAA,EAAAA,IAAH,sBAEZC,EAAMD,EAAAA,EAAAA,IAAH,8CAIHE,EAAUF,EAAAA,EAAAA,GAAH,uEAKPG,EAAMH,EAAAA,EAAAA,IAAH,4DAKHI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,ikBAwBVM,EAAON,EAAAA,EAAAA,KAAH,oE,wGCzCJO,EAAkB,SAACC,GAAD,OAAWA,EAAMC,OAAOC,SAAxB,EAElBC,EAAc,SAACH,GAAD,OAAWA,EAAMC,OAAOG,KAAxB,E,iDCFdC,EAAOb,EAAAA,EAAAA,IAAH,qLAUJc,EAASd,EAAAA,EAAAA,OAAH,+LAUNe,EAAaf,EAAAA,EAAAA,IAAH,6ZAkBVgB,EAAShB,EAAAA,EAAAA,IAAH,gF,SCpCNiB,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAKH,EAAKG,GACVC,EAAU,CACdC,UAAWL,EAAKK,WAAaL,EAAKM,aAAe,EAAI,GACrDA,aAAcN,EAAKM,aAIrB,OACE,UAACX,EAAD,YACE,yBAAG,SAAOK,EAAKO,SACf,yBAAG,WAASP,EAAKT,WACjB,yBAAG,cAAYS,EAAKK,UAAUG,eAAe,aAC7C,SAACX,EAAD,WACE,SAACC,EAAD,CAAQW,IAAKT,EAAKU,OAAQC,IAAI,cAEhC,SAACf,EAAD,CACEgB,QAXe,kBAAMX,GAASY,EAAAA,EAAAA,IAAiB,CAAEV,GAAAA,EAAIC,QAAAA,IAAtC,EAYfU,MAAO,CAAEC,gBAAiBf,EAAKM,YAAc,UAAY,WAF3D,SAIGN,EAAKM,YAAc,YAAc,aAIzC,EC5BYU,EAAKlC,EAAAA,EAAAA,GAAH,sIAQFmC,EAAKnC,EAAAA,EAAAA,GAAH,qKCJFoC,EAAW,WAAO,IAAD,EACpBC,GAAUC,EAAAA,EAAAA,KAAY,SAAA9B,GAAK,OAAIA,EAAMC,MAAV,IAA3B4B,MACAE,GAASD,EAAAA,EAAAA,KAAY,SAAA9B,GAAK,OAAIA,EAAMC,MAAV,IAA1B8B,KAIRC,QAAQC,WAAWJ,GACnBG,QAAQC,IAAIJ,GACZG,QAAQC,IAAIF,GAUZ,OAAwBG,EAAAA,EAAAA,UAnBJ,GAmBpB,eAAOC,EAAP,KAAaC,EAAb,KA+BA,OACE,iCACE,SAACV,EAAD,iBACGG,QADH,IACGA,GADH,UACGA,EAAOQ,MAAM,EAAGF,UADnB,aACG,EAAuBG,KAAI,SAAA5B,GAC1B,OACE,SAACiB,EAAD,WACE,SAAClB,EAAD,CACEC,KAAMA,KAFDA,EAAKG,GAYjB,MAEFsB,GAAI,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAOU,UACb,mBAAQjB,QAlDW,WACvBc,EAAQD,EArBU,EAsBnB,EAgDK,SAAmC,gBAI1C,E,8BCnCD,EAlCe,WACb,IAAMxB,GAAWC,EAAAA,EAAAA,MACXV,GAAY4B,EAAAA,EAAAA,IAAY/B,GACxBK,GAAQ0B,EAAAA,EAAAA,IAAY3B,GAM1B,OAJAqC,EAAAA,EAAAA,YAAU,WACR7B,GAAS8B,EAAAA,EAAAA,MACV,GAAE,CAAC9B,KAGF,iCACE,wBAAI,YACJ,SAAC,KAAD,WACE,UAAC,KAAD,CAAY+B,GAAG,IAAf,WACE,SAAC,MAAD,CAAaC,KAAM,MACnB,SAAC,KAAD,UAAM,gBAIV,SAACf,EAAD,IACC1B,IAAcE,IAAS,SAACwC,EAAA,EAAD,KACxB,SAAC,KAAD,CACEC,aAAc,CACZrB,MAAO,CACLsB,OAAQ,oBACRC,QAAS,OACTC,UAAW,aAMtB,C","sources":["components/NotFound/NotFound.styled.js","redux/tweets/tweetsSelectors.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const NotFoundWrap = styled.div``;\n\nexport const Img = styled.img`\n  margin: 40px auto;\n`;\n\nexport const Message = styled.h1`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Div = styled.div`\n  width: 100px;\n  margin: 0 auto;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  text-align: center;\n  width: 100px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: bold;\n  color: black;\n  font-weight: 500;\n  background-color: #f3efc3df;\n  border-color: rgba(0, 0, 0, 0.3);\n  font: inherit;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #336fb3df;\n  }\n`;\n\nexport const Span = styled.span`\n  text-align: center;\n  font-weight: bold;\n`;\n","export const selectTweets = (state) => state.tweets.items;\n\nexport const selectIsLoading = (state) => state.tweets.isLoading;\n\nexport const selectError = (state) => state.tweets.error;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  height: 460px;\n  width: 380px;\n  justify-content: center;\n  border: none;\n  border-radius: 20px;\n  background-color: #5736a3;\n  position: relative;\n`;\n\nexport const Button = styled.button`\npadding-top: 14px;\npadding-bottom: 14px;\n  width: 196px;\n  border-radius: 10px;\n  transition: transform 300ms ease-in-out;\n&:hover {\n    transform: scale(1.2);\n`;\n\nexport const AvatarWrap = styled.div`\n  position: absolute;\n\n  left: 50%;\n  transform: translate(-50%, 50%);\n  z-index: 2;\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\n// display: flex;\n//   justify-content: center;\n//   border: none;\n//\n//\n//   align-items: center;\n\n// .userCard {\n//   width: 380px;\n//   height: 460px;\n//   background: linear-gradient(\n//     114.99deg,\n//     #471ca9 -0.99%,\n//     #5736a3 54.28%,\n//     #4b2a99 78.99%\n//   );\n//   box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n//   border-radius: 20px;\n//   transition: filter 400ms linear;\n// }\n\n// .userCard:hover .picture {\n//   filter: drop-shadow(0 0 20px #646cffaa);\n//   animation: rotate infinite 1s linear;\n// }\n\n// .imgContainer {\n//   height: 218px;\n//   position: relative;\n// }\n\n// .imgContainer::after {\n//   content: \"\";\n//   position: absolute;\n//   bottom: -4px;\n//   left: 0;\n//   width: 100%;\n//   height: 8px;\n//   background: #ebd8ff;\n//   box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n//     inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n// }\n\n// .logo {\n//   position: absolute;\n//   top: 20px;\n//   left: 20px;\n// }\n\n// .picture {\n//   margin: 28px 36px 16px;\n// }\n\n// @keyframes rotate {\n//   0% {\n//     transform: rotate(0deg);\n//   }\n//   50% {\n//     transform: rotate(10deg);\n//   }\n//   100% {\n//     transform: rotate(0deg);\n//   }\n// }\n\n// .userAvatarContainer {\n//   position: absolute;\n//   bottom: 0;\n//   left: 50%;\n//   transform: translate(-50%, 50%);\n//   z-index: 2;\n//   width: 80px;\n//   height: 80px;\n//   background: #ebd8ff;\n//   box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n//     inset 0px -2.19582px 4.39163px #ae7be3,\n//     inset 0px 4.39163px 3.29372px #fbf8ff;\n//   border-radius: 50%;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// }\n\n// .userAvatar {\n//\n// }\n\n// .userInfo {\n//   display: flex;\n//   flex-direction: column;\n//   padding: 62px 16px 36px;\n//   align-items: center;\n// }\n\n// .userTweets {\n//   font-weight: 500;\n//   font-size: 20px;\n//   line-height: 1.2;\n//   text-transform: uppercase;\n//   color: #ebd8ff;\n//   margin-bottom: 16px;\n// }\n\n// .userFollowers {\n//   font-weight: 500;\n//   font-size: 20px;\n//   line-height: 1.2;\n//   text-transform: uppercase;\n//   color: #ebd8ff;\n//   margin-bottom: 26px;\n// }\n\n// .userToggleFollow {\n//   width: 196px;\n//   box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n//   border-radius: 10.3108px;\n//   padding: 14px 28px;\n//   font-family: \"Montserrat\";\n//   font-style: normal;\n//   font-weight: 600;\n//   font-size: 18px;\n//   line-height: 1.2;\n//   text-transform: uppercase;\n//   color: #373737;\n//   transition: box-shadow 400ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// }\n\n// .userToggleFollow:hover,\n// .userToggleFollow:focus {\n//   box-shadow: inset 0 0 30px 10px #646cffaa;\n//   scale: 1.1;\n// }\n","import { useDispatch } from 'react-redux';\nimport { updateTweetAsync } from '../../redux/tweets/tweetsOperations';\nimport { Card, Button, Avatar, AvatarWrap } from './TweetCard.styled';\n\nexport const TweetCard = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const id = item.id;\n  const newData = {\n    followers: item.followers + (item.isFollowing ? -1 : 1),\n    isFollowing: !item.isFollowing,\n  };\n  const handleUpdate = () => dispatch(updateTweetAsync({ id, newData }));\n\n  return (\n    <Card>\n      <p>name: {item.user}</p>\n      <p>tweets: {item.tweets}</p>\n      <p>followers: {item.followers.toLocaleString('en-US')}</p>\n      <AvatarWrap>\n        <Avatar src={item.avatar} alt=\"Avatar\" />\n      </AvatarWrap>\n      <Button\n        onClick={handleUpdate}\n        style={{ backgroundColor: item.isFollowing ? '#5CD3A8' : '#EBD8FF' }}\n      >\n        {item.isFollowing ? 'Following' : 'Follow'}\n      </Button>\n    </Card>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  justify-self: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n\n  padding-left: 8px;\n  padding-right: 8px;\n  gap: 40px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\n//\n","import { useSelector } from 'react-redux';\nimport { TweetCard } from '../TweetCard/TweetCard';\nimport { Ul, Li } from './CardList.styled';\nimport { useState } from 'react';\n// import { useState } from \"react\";\nconst tweetsPerPage = 3;\nexport const Cardlist = () => {\n  const { items } = useSelector(state => state.tweets);\n  const { page } = useSelector(state => state.tweets);\n  // const [page, setPage] = useState(1);\n  // const [loading, setLoading] = useState(false);\n  //   const filter = useSelector((state) => state.filter);\n  console.log(typeof items);\n  console.log(items);\n  console.log(page);\n  //   console.log(typeof filter);\n  //   const getFilteredContacts = () => {\n  //     const normalaizedFilter = filter.toLowerCase();\n  //     return items.filter((contact) =>\n  //       contact.name.toLowerCase().includes(normalaizedFilter)\n  //     );\n  //   };\n\n  //   const filteredContacts = getFilteredContacts();\n  const [next, setNext] = useState(tweetsPerPage);\n  const handleMoreTweets = () => {\n    setNext(next + tweetsPerPage);\n  };\n\n  //   return (\n  //     <>\n  //       <Ul>\n  //         {/* {filteredContacts.map((contact) => { */}\n  //         {items.map((item) => {\n  //           return (\n  //             <Li key={item.id}>\n  //               <TweetCard\n  //                 id={item.id}\n  //                 user={item.user}\n  //                 tweets={item.tweets}\n  //                 followers={item.followers}\n  //                 avatar={item.avatar}\n  //               />\n  //             </Li>\n  //           );\n  //         })}\n  //       </Ul>\n  //       <button type=\"button\">\n  //         {/* onClick={() => onLoadMore()} */}\n  //         Load more\n  //       </button>\n  //     </>\n  //   );\n  // };\n\n  return (\n    <>\n      <Ul>\n        {items?.slice(0, next)?.map(item => {\n          return (\n            <Li key={item.id}>\n              <TweetCard\n                item={item}\n                // id={item.id}\n                // user={item.user}\n                // tweets={item.tweets}\n                // followers={item.followers}\n                // avatar={item.avatar}\n                // following={item.following}\n              />\n            </Li>\n          );\n        })}\n      </Ul>\n      {next < items?.length && (\n        <button onClick={handleMoreTweets}>Load more</button>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectError, selectIsLoading } from '../redux/tweets/tweetsSelectors';\nimport { fetchTweetsAsync } from '../redux/tweets/tweetsOperations';\nimport { Toaster } from 'react-hot-toast';\nimport { Cardlist } from '../components/CardList/CardList';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Div, StyledLink, Span } from '../components/NotFound/NotFound.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchTweetsAsync());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Tweets</h1>\n      <Div>\n        <StyledLink to=\"/\">\n          <BsArrowLeft size={20} />\n          <Span> Back</Span>\n        </StyledLink>\n      </Div>\n\n      <Cardlist />\n      {isLoading && !error && <Loader />}\n      <Toaster\n        toastOptions={{\n          style: {\n            border: '2px solid #72b372',\n            padding: '15px',\n            marginTop: '30px',\n          },\n        }}\n      />\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["NotFoundWrap","styled","Img","Message","Div","StyledLink","Link","Span","selectIsLoading","state","tweets","isLoading","selectError","error","Card","Button","AvatarWrap","Avatar","TweetCard","item","dispatch","useDispatch","id","newData","followers","isFollowing","user","toLocaleString","src","avatar","alt","onClick","updateTweetAsync","style","backgroundColor","Ul","Li","Cardlist","items","useSelector","page","console","log","useState","next","setNext","slice","map","length","useEffect","fetchTweetsAsync","to","size","Loader","toastOptions","border","padding","marginTop"],"sourceRoot":""}