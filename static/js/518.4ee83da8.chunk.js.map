{"version":3,"file":"static/js/518.4ee83da8.chunk.js","mappings":"sOAEaA,EAAkB,SAACC,GAAD,OAAWA,EAAMC,OAAOC,SAAxB,EAElBC,EAAc,SAACH,GAAD,OAAWA,EAAMC,OAAOG,KAAxB,E,iDCFdC,EAAOC,EAAAA,EAAAA,IAAH,+NAWJC,EAAUD,EAAAA,EAAAA,IAAH,kYAkBPE,EAAOF,EAAAA,EAAAA,IAAH,6EAMJG,EAAUH,EAAAA,EAAAA,IAAH,mDAIPI,EAAaJ,EAAAA,EAAAA,IAAH,4aAkBVK,EAASL,EAAAA,EAAAA,IAAH,gFAMNM,EAAWN,EAAAA,EAAAA,IAAH,yHAORO,EAAaP,EAAAA,EAAAA,EAAH,+KASVQ,EAAgBR,EAAAA,EAAAA,EAAH,+KASbS,EAAST,EAAAA,EAAAA,OAAH,6a,+DCzENU,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAKH,EAAKG,GACVC,EAAU,CACdC,UAAWL,EAAKK,WAAaL,EAAKM,aAAe,EAAI,GACrDA,aAAcN,EAAKM,aAIrB,OACE,UAAClB,EAAD,YACE,UAACE,EAAD,YAEE,SAACC,EAAD,CAAMgB,IAAG,U,0+BAAaC,IAAI,UAC1B,SAAChB,EAAD,CAASe,IAAG,UAAKE,GAAWD,IAAI,aAEhC,SAACf,EAAD,WACE,SAACC,EAAD,CAAQa,IAAKP,EAAKU,OAAQF,IAAKR,EAAKW,aAGxC,UAAChB,EAAD,YACE,UAACC,EAAD,WAAY,WAASI,EAAKhB,WAC1B,UAACa,EAAD,WAAe,cACDG,EAAKK,UAAUO,eAAe,aAE5C,SAACd,EAAD,CACEe,QAnBa,kBAAMZ,GAASa,EAAAA,EAAAA,IAAiB,CAAEX,GAAAA,EAAIC,QAAAA,IAAtC,EAoBbW,MAAO,CAAEC,gBAAiBhB,EAAKM,YAAc,UAAY,WAF3D,SAIGN,EAAKM,YAAc,YAAc,gBAK3C,EClDYW,EAAK5B,EAAAA,EAAAA,GAAH,0KAWF6B,EAAK7B,EAAAA,EAAAA,GAAH,uJAQF8B,EAAM9B,EAAAA,EAAAA,OAAH,okBCdH+B,EAAW,WAAO,IAAD,EACpBC,GAAUC,EAAAA,EAAAA,KAAY,SAAAvC,GAAK,OAAIA,EAAMC,MAAV,IAA3BqC,MACAE,GAASD,EAAAA,EAAAA,KAAY,SAAAvC,GAAK,OAAIA,EAAMC,MAAV,IAA1BuC,KAIRC,QAAQC,WAAWJ,GACnBG,QAAQC,IAAIJ,GACZG,QAAQC,IAAIF,GAUZ,OAAwBG,EAAAA,EAAAA,UAnBJ,GAmBpB,eAAOC,EAAP,KAAaC,EAAb,KAIA,OACE,iCACE,SAACX,EAAD,iBACGI,QADH,IACGA,GADH,UACGA,EAAOQ,MAAM,EAAGF,UADnB,aACG,EAAuBG,KAAI,SAAA9B,GAC1B,OACE,SAACkB,EAAD,WACE,SAACnB,EAAD,CAAWC,KAAMA,KADVA,EAAKG,GAIjB,MAEFwB,GAAI,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAOU,UAAU,SAACZ,EAAD,CAAKN,QAdT,WACvBe,EAAQD,EArBU,EAsBnB,EAY4B,SAAgC,gBAG9D,E,UCTD,EA1Be,WACb,IAAM1B,GAAWC,EAAAA,EAAAA,MACXjB,GAAYqC,EAAAA,EAAAA,IAAYxC,GACxBK,GAAQmC,EAAAA,EAAAA,IAAYpC,GAM1B,OAJA8C,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAGF,iCACE,SAACmB,EAAD,IACCnC,IAAcE,IAAS,SAAC+C,EAAA,EAAD,KACxB,SAAC,KAAD,CACEC,aAAc,CACZpB,MAAO,CACLqB,OAAQ,oBACRC,QAAS,OACTC,UAAW,aAMtB,C","sources":["redux/tweets/tweetsSelectors.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","pages/Tweets.jsx"],"sourcesContent":["export const selectTweets = (state) => state.tweets.items;\n\nexport const selectIsLoading = (state) => state.tweets.isLoading;\n\nexport const selectError = (state) => state.tweets.error;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  // position: relative;\n  height: 460px;\n  width: 380px;\n  // justify-content: center;\n  border: none;\n  border-radius: 20px;\n  background: var(--card-bg);\n  box-shadow: var(--card-shadow);\n`;\n\nexport const ImgWrap = styled.div`\n  height: 218px;\n  position: relative;\n  top: 0;\n  ::after {\n    content: '';\n    width: 100%;\n    height: 8px;\n    position: absolute;\n    bottom: 28px;\n    left: 0;\n    background: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  top: -10px;\n  left: 20px;\n`;\n\nexport const Picture = styled.img`\n  margin: 28px 36px 16px;\n`;\n\nexport const AvatarWrap = styled.div`\n  position: absolute;\n  bottom: 28px;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  z-index: 5;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 36px 16px 36px;\n  align-items: center;\n`;\n\nexport const InfoTweets = styled.p`\n  color: var(--light-text-color);\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  margin-bottom: 16px;\n`;\n\nexport const InfoFollowers = styled.p`\n  color: var(--light-text-color);\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  margin-bottom: 26px;\n`;\n\nexport const Button = styled.button`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  width: 196px;\n  border: none;\n  cursor: pointer;\n  border-radius: 10px;\n  font-family: Montserrat;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1, 2;\n  color: var(--dark-text-color);\n  text-transform: uppercase;\n  box-shadow: var(--btn-shadow);\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { updateTweetAsync } from '../../redux/tweets/tweetsOperations';\nimport {\n  Card,\n  Button,\n  Avatar,\n  AvatarWrap,\n  ImgWrap,\n  Picture,\n  Logo,\n  InfoWrap,\n  InfoTweets,\n  InfoFollowers,\n} from './TweetCard.styled';\nimport logo from '../../images/logo.png';\nimport picture from '../../images/picture.png';\n\nexport const TweetCard = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const id = item.id;\n  const newData = {\n    followers: item.followers + (item.isFollowing ? -1 : 1),\n    isFollowing: !item.isFollowing,\n  };\n  const handleUpdate = () => dispatch(updateTweetAsync({ id, newData }));\n\n  return (\n    <Card>\n      <ImgWrap>\n        {/* <p>name: {item.user}</p> */}\n        <Logo src={`${logo}`} alt=\"logo\" />\n        <Picture src={`${picture}`} alt=\"picture\" />\n\n        <AvatarWrap>\n          <Avatar src={item.avatar} alt={item.user} />\n        </AvatarWrap>\n      </ImgWrap>\n      <InfoWrap>\n        <InfoTweets>tweets: {item.tweets}</InfoTweets>\n        <InfoFollowers>\n          followers: {item.followers.toLocaleString('en-US')}\n        </InfoFollowers>\n        <Button\n          onClick={handleUpdate}\n          style={{ backgroundColor: item.isFollowing ? '#5CD3A8' : '#EBD8FF' }}\n        >\n          {item.isFollowing ? 'Following' : 'Follow'}\n        </Button>\n      </InfoWrap>\n    </Card>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  justify-self: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 0;\n\n  margin-bottom: 40px;\n`;\n\nexport const Li = styled.li`\n  // padding-left: 8px;\n  // padding-right: 8px;\n  // gap: 40px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Btn = styled.button`\ndisplay: block;\nmargin: 0 auto;\npadding-top: 14px;\npadding-bottom: 14px;\nwidth: 196px;\nborder: none;\ncursor: pointer;\nborder-radius: 10px;\nfont-family: Montserrat;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 1,2;\ntext-transform: uppercase;\ncolor: var(--dark-text-color);\nbackground-color: var(--btn-tweets-bg-color);\nbox-shadow: var(--btn-shadow);\n\ntransition: color 300ms ease-in-out, background-color 300ms ease-in-out;\n&:hover {\n    // transform: scale(1.05);\n    color: var(--light-text-color);\n    background-color: #5736a3;\n`;\n","import { useSelector } from 'react-redux';\nimport { TweetCard } from '../TweetCard/TweetCard';\nimport { Ul, Li, Btn } from './CardList.styled';\nimport { useState } from 'react';\n\n// import { useState } from \"react\";\nconst tweetsPerPage = 3;\nexport const Cardlist = () => {\n  const { items } = useSelector(state => state.tweets);\n  const { page } = useSelector(state => state.tweets);\n  // const [page, setPage] = useState(1);\n  // const [loading, setLoading] = useState(false);\n  //   const filter = useSelector((state) => state.filter);\n  console.log(typeof items);\n  console.log(items);\n  console.log(page);\n  //   console.log(typeof filter);\n  //   const getFilteredContacts = () => {\n  //     const normalaizedFilter = filter.toLowerCase();\n  //     return items.filter((contact) =>\n  //       contact.name.toLowerCase().includes(normalaizedFilter)\n  //     );\n  //   };\n\n  //   const filteredContacts = getFilteredContacts();\n  const [next, setNext] = useState(tweetsPerPage);\n  const handleMoreTweets = () => {\n    setNext(next + tweetsPerPage);\n  };\n  return (\n    <>\n      <Ul>\n        {items?.slice(0, next)?.map(item => {\n          return (\n            <Li key={item.id}>\n              <TweetCard item={item} />\n            </Li>\n          );\n        })}\n      </Ul>\n      {next < items?.length && <Btn onClick={handleMoreTweets}>Load more</Btn>}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectError, selectIsLoading } from '../redux/tweets/tweetsSelectors';\nimport { fetchTweetsAsync } from '../redux/tweets/tweetsOperations';\nimport { Toaster } from 'react-hot-toast';\nimport { Cardlist } from '../components/CardList/CardList';\nimport Loader from 'components/Loader/Loader';\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchTweetsAsync());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Cardlist />\n      {isLoading && !error && <Loader />}\n      <Toaster\n        toastOptions={{\n          style: {\n            border: '2px solid #72b372',\n            padding: '15px',\n            marginTop: '30px',\n          },\n        }}\n      />\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectIsLoading","state","tweets","isLoading","selectError","error","Card","styled","ImgWrap","Logo","Picture","AvatarWrap","Avatar","InfoWrap","InfoTweets","InfoFollowers","Button","TweetCard","item","dispatch","useDispatch","id","newData","followers","isFollowing","src","alt","picture","avatar","user","toLocaleString","onClick","updateTweetAsync","style","backgroundColor","Ul","Li","Btn","Cardlist","items","useSelector","page","console","log","useState","next","setNext","slice","map","length","useEffect","fetchTweetsAsync","Loader","toastOptions","border","padding","marginTop"],"sourceRoot":""}