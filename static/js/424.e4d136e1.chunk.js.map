{"version":3,"file":"static/js/424.e4d136e1.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.styled.js","redux/tweets/tweetsSelectors.js","components/FolowBtn/FolowBtn.jsx","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const NotFoundWrap = styled.div``;\n\nexport const Img = styled.img`\n  margin: 40px auto;\n`;\n\nexport const Message = styled.h1`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Div = styled.div`\n  width: 100px;\n  margin: 0 auto;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  text-align: center;\n  width: 100px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: bold;\n  color: black;\n  font-weight: 500;\n  background-color: #f3efc3df;\n  border-color: rgba(0, 0, 0, 0.3);\n  font: inherit;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #336fb3df;\n  }\n`;\n\nexport const Span = styled.span`\n  text-align: center;\n  font-weight: bold;\n`;\n","export const selectTweets = (state) => state.tweets.items;\n\nexport const selectIsLoading = (state) => state.tweets.isLoading;\n\nexport const selectError = (state) => state.tweets.error;\n","import React, { useEffect, useState } from \"react\";\n\nconst FollowBtn = ({ followers }) => {\n  const [isFollowing, setIsFollowing] = useState(\n    localStorage.getItem(\"isFollowing\") === \"true\"\n  );\n  const [followerCount, setFollowerCount] = useState(\n    parseInt(localStorage.getItem(\"followerCount\"), 10) || { followers }\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"isFollowing\", isFollowing);\n    localStorage.setItem(\"followerCount\", followerCount);\n  }, [isFollowing, followerCount]);\n\n  const handleFollowClick = () => {\n    if (isFollowing) {\n      setFollowerCount((prevCount) => prevCount - 1);\n    } else {\n      setFollowerCount((prevCount) => prevCount + 1);\n    }\n    setIsFollowing(!isFollowing);\n  };\n\n  return (\n    <div>\n      <button\n        onClick={handleFollowClick}\n        style={{ backgroundColor: isFollowing ? \"green\" : \"blue\" }}\n      >\n        {isFollowing ? \"Following\" : \"Follow\"}\n      </button>\n      <p>Follower count: {followerCount.toLocaleString(\"en-US\")}</p>\n    </div>\n  );\n};\n\nexport default FollowBtn;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  border: none;\n  border-radius: 50%;\n  height: 30px;\n  width: 30px;\n  align-items: center;\n  transition: transform 300ms ease-in-out;\n&:hover {\n    transform: scale(1.2);\n`;\n","// import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\n// import { deleteContact } from \"redux/contacts/contactsOperations\";\n// import { RxCross2 } from \"react-icons/rx\";\n\nimport { toggleIsFollowing } from \"../../redux/tweets/tweetsOperations\";\nimport FollowBtn from \"../FolowBtn/FolowBtn\";\nimport { Button } from \"./TweetCard.styled\";\n\nexport const TweetCard = ({\n  id,\n  user,\n  tweets,\n  followers,\n  avatar,\n  isFollowing,\n}) => {\n  const dispatch = useDispatch();\n  //   const handleClick = () => {\n  //     dispatch(deleteContact(id));\n  //   };\n  const handleToggle = () => dispatch(toggleIsFollowing(user));\n\n  return (\n    <>\n      <p>name: {user}</p>\n      <p>tweets: {tweets}</p>\n      <p>followers: {followers.toLocaleString(\"en-US\")}</p>\n      <img src={avatar} alt=\"Avatar\" />\n\n      <Button\n        onClick={handleToggle}\n        style={{ backgroundColor: isFollowing ? \"green\" : \"yellow\" }}\n      >\n        {/* <Button onClick={handleClick}> */}\n        {/* <RxCross2 size=\"20px\" /> */}\n        {isFollowing ? \"Following\" : \"Follow\"}\n      </Button>\n      <FollowBtn followers={followers} />\n    </>\n  );\n};\n\n// TweetCard.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  width: 80%;\n  margin: 0 auto;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  padding-left: 8px;\n  padding-right: 8px;\n  gap: 40px;\n  align-items: center;\n  justify-content: space-between;\n  transition: background-color 300ms ease-in-out;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.07);\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport { TweetCard } from \"../TweetCard/TweetCard\";\nimport { Ul, Li } from \"./CardList.styled\";\nimport { useState } from \"react\";\n// import { useState } from \"react\";\nconst tweetsPerPage = 4;\nexport const Cardlist = () => {\n  const { items } = useSelector((state) => state.tweets);\n  const { page } = useSelector((state) => state.tweets);\n  // const [page, setPage] = useState(1);\n  // const [loading, setLoading] = useState(false);\n  //   const filter = useSelector((state) => state.filter);\n  console.log(typeof items);\n  console.log(items);\n  console.log(page);\n  //   console.log(typeof filter);\n  //   const getFilteredContacts = () => {\n  //     const normalaizedFilter = filter.toLowerCase();\n  //     return items.filter((contact) =>\n  //       contact.name.toLowerCase().includes(normalaizedFilter)\n  //     );\n  //   };\n\n  //   const filteredContacts = getFilteredContacts();\n  const [next, setNext] = useState(tweetsPerPage);\n  const handleMoreTweets = () => {\n    setNext(next + tweetsPerPage);\n  };\n\n  //   return (\n  //     <>\n  //       <Ul>\n  //         {/* {filteredContacts.map((contact) => { */}\n  //         {items.map((item) => {\n  //           return (\n  //             <Li key={item.id}>\n  //               <TweetCard\n  //                 id={item.id}\n  //                 user={item.user}\n  //                 tweets={item.tweets}\n  //                 followers={item.followers}\n  //                 avatar={item.avatar}\n  //               />\n  //             </Li>\n  //           );\n  //         })}\n  //       </Ul>\n  //       <button type=\"button\">\n  //         {/* onClick={() => onLoadMore()} */}\n  //         Load more\n  //       </button>\n  //     </>\n  //   );\n  // };\n\n  return (\n    <>\n      <Ul>\n        {items?.slice(0, next)?.map((item) => {\n          return (\n            <Li key={item.id}>\n              <TweetCard\n                id={item.id}\n                user={item.user}\n                tweets={item.tweets}\n                followers={item.followers}\n                avatar={item.avatar}\n                following={item.following}\n              />\n            </Li>\n          );\n        })}\n      </Ul>\n      {next < items?.length && (\n        <button onClick={handleMoreTweets}>Load more</button>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectError, selectIsLoading } from \"../redux/tweets/tweetsSelectors\";\nimport { fetchTweets } from \"../redux/tweets/tweetsOperations\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Cardlist } from \"../components/CardList/CardList\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { Div, StyledLink, Span } from \"../components/NotFound/NotFound.styled\";\n\nconst Tweets = () => {\n  //   const [movies, setMovies] = useState([]);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchTweets());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Wrap> */}\n      <h1>Tweets</h1>\n      <Div>\n        <StyledLink to=\"/\">\n          <BsArrowLeft size={20} />\n          <Span> Back</Span>\n        </StyledLink>\n      </Div>\n      {/* <ContactForm />\n        <TitleH2>Contacts</TitleH2>\n        <Filter /> */}\n      {isLoading && !error && <b>Request in progress...</b>}\n      <Cardlist />\n      <Toaster\n        toastOptions={{\n          style: {\n            border: \"2px solid #72b372\",\n            padding: \"15px\",\n            marginTop: \"30px\",\n          },\n        }}\n      />\n      {/* </Wrap> */}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["NotFoundWrap","styled","Img","Message","Div","StyledLink","Link","Span","selectIsLoading","state","tweets","isLoading","selectError","error","followers","useState","localStorage","getItem","isFollowing","setIsFollowing","parseInt","followerCount","setFollowerCount","useEffect","setItem","onClick","prevCount","style","backgroundColor","toLocaleString","Button","TweetCard","id","user","avatar","dispatch","useDispatch","src","alt","toggleIsFollowing","Ul","Li","Cardlist","items","useSelector","page","console","log","next","setNext","slice","map","item","following","length","fetchTweets","to","size","toastOptions","border","padding","marginTop"],"sourceRoot":""}